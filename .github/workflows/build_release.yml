name: Build release

on:
  push:
    tags:
      # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: Use Rust nightly
      run: rustup default nightly
    - name: Add WASM target
      run: rustup target add wasm32-unknown-unknown
    - name: Install cargo dependencies
      run: cargo install cross --git https://github.com/cross-rs/cross &&
        cargo install --locked trunk
    - name: Install tailwindcss
      run: cd frontend && npm install
    - name: Build for Raspberry Pi 2/3/4)
      run: make app_armv7
    - name: Build for Raspberry Pi 0/1
      run: make app_arm
    - name: Rename artifacts
      run: |
        mv app/target/armv7-unknown-linux-gnueabihf/release/wg_display app/target/armv7-unknown-linux-gnueabihf/release/wg-display-armv7-unknown-linux-gnueabihf
        mv app/target/arm-unknown-linux-gnueabihf/release/wg_display app/target/arm-unknown-linux-gnueabihf/release/wg-display-arm-unknown-linux-gnueabihf
    - uses: ncipollo/release-action@v1
      with:
          artifacts: "app/target/armv7-unknown-linux-gnueabihf/release/wg-display-armv7-unknown-linux-gnueabihf, app/target/arm-unknown-linux-gnueabihf/release/wg-display-arm-unknown-linux-gnueabihf"
          artifactErrorsFailBuild: true
